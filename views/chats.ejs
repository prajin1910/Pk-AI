<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>All Chats - AI ChatBot</title>
    <link rel="icon" href="/ai.png" type="image/x-img">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
    --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    --secondary-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
    --success-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
    --dark-bg: #0d1117;
    --darker-bg: #010409;
    --card-bg: #161b22;
    --sidebar-bg: #21262d;
    --text-primary: #e6edf3;
    --text-secondary: #7d8590;
    --border-color: #30363d;
    --shadow-light: 0 2px 10px rgba(0, 0, 0, 0.3);
    --shadow-medium: 0 4px 20px rgba(0, 0, 0, 0.4);
    --shadow-heavy: 0 8px 30px rgba(0, 0, 0, 0.5);
    --input-bg: #0d1117;
    --sidebar-width: 320px;
    --transition-speed: 0.3s;
    --border-radius: 12px;
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

html {
    height: 100%;
    scroll-behavior: smooth;
}

body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
    background: var(--dark-bg);
    min-height: 100vh;
    font-size: 14px;
    line-height: 1.6;
    color: var(--text-primary);
    display: flex;
    flex-direction: column;
    overflow-x: hidden;
}

/* Enhanced Chats Container */
.chats-container {
    display: flex;
    height: 100vh;
    width: 100%;
    position: relative;
    overflow: hidden;
}

/* Sidebar Improvements */
.sidebar {
    width: var(--sidebar-width);
    background: var(--sidebar-bg);
    backdrop-filter: blur(20px);
    border-right: 1px solid var(--border-color);
    display: flex;
    flex-direction: column;
    transition: transform var(--transition-speed) cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: var(--shadow-medium);
    z-index: 100;
    position: relative;
    will-change: transform;
}

.sidebar-header {
    padding: 1.5rem;
    border-bottom: 1px solid var(--border-color);
    background: rgba(102, 126, 234, 0.1);
    position: relative;
}

.sidebar-header h4 {
    margin: 0 0 1rem 0;
    color: var(--text-primary);
    font-weight: 700;
    font-size: 1.25rem;
    display: flex;
    align-items: center;
    gap: 0.75rem;
}

.sidebar-header h4 i {
    background: var(--primary-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    font-size: 1.5rem;
}

.back-to-chat-btn {
    width: 100%;
    background: var(--primary-gradient);
    color: white;
    border: none;
    padding: 0.75rem 1.25rem;
    border-radius: var(--border-radius);
    font-weight: 600;
    font-size: 0.9rem;
    transition: all var(--transition-speed) cubic-bezier(0.4, 0, 0.2, 1);
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    box-shadow: var(--shadow-light);
    text-decoration: none;
    cursor: pointer;
    position: relative;
    overflow: hidden;
}

.back-to-chat-btn:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-heavy);
    filter: brightness(1.1);
}

.back-to-chat-btn:active {
    transform: translateY(0);
}

.back-to-chat-btn::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
        to bottom right,
        rgba(255, 255, 255, 0.3),
        rgba(255, 255, 255, 0)
    );
    transform: rotate(30deg);
    transition: all 0.5s ease;
    opacity: 0;
}

.back-to-chat-btn:hover::after {
    opacity: 1;
    animation: shine 1.5s infinite;
}

@keyframes shine {
    0% {
        transform: translateX(-100%) rotate(30deg);
    }
    100% {
        transform: translateX(100%) rotate(30deg);
    }
}

/* Sidebar Footer Improvements */
.sidebar-footer {
    padding: 1.25rem;
    border-top: 1px solid var(--border-color);
    background: rgba(0, 0, 0, 0.2);
}

.user-info {
    display: flex;
    align-items: center;
    margin-bottom: 1rem;
    padding: 0.75rem;
    background: var(--card-bg);
    border-radius: var(--border-radius);
    box-shadow: var(--shadow-light);
    border: 1px solid var(--border-color);
    transition: all var(--transition-speed) ease;
}

.user-info:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-medium);
}

.user-avatar {
    width: 42px;
    height: 42px;
    border-radius: 50%;
    background: var(--primary-gradient);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    margin-right: 0.75rem;
    box-shadow: var(--shadow-light);
    font-size: 1.1rem;
    flex-shrink: 0;
}

.user-details h6 {
    margin: 0 0 0.125rem 0;
    font-weight: 600;
    color: var(--text-primary);
    font-size: 0.9rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 180px;
}

.user-details small {
    color: var(--text-secondary);
    font-size: 0.75rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 180px;
    display: block;
}

.sidebar-actions {
    display: flex;
    gap: 0.75rem;
}

.sidebar-actions .btn {
    flex: 1;
    font-size: 0.8rem;
    padding: 0.625rem 0.75rem;
    border-radius: 10px;
    font-weight: 500;
    transition: all var(--transition-speed) cubic-bezier(0.4, 0, 0.2, 1);
    border: 1px solid var(--border-color);
    background: var(--card-bg);
    color: var(--text-primary);
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
}

.sidebar-actions .btn:hover {
    transform: translateY(-1px);
    box-shadow: var(--shadow-light);
    background: #2d3748;
}

.sidebar-actions .btn i {
    font-size: 0.9rem;
}

/* Main Chats Area Improvements */
.main-chats {
    flex: 1;
    display: flex;
    flex-direction: column;
    background: var(--dark-bg);
    position: relative;
    overflow-y: auto;
    transition: all var(--transition-speed) ease;
}

.chats-header {
    padding: 1rem 1.5rem;
    border-bottom: 1px solid var(--border-color);
    display: flex;
    align-items: center;
    background: var(--card-bg);
    backdrop-filter: blur(20px);
    box-shadow: var(--shadow-light);
    z-index: 10;
    position: sticky;
    top: 0;
}

.btn-toggle-sidebar {
    display: none;
    background: none;
    border: none;
    font-size: 1.25rem;
    margin-right: 1rem;
    color: var(--text-primary);
    padding: 0.5rem;
    border-radius: 8px;
    transition: all var(--transition-speed) ease;
    cursor: pointer;
}

.btn-toggle-sidebar:hover {
    background: rgba(255, 255, 255, 0.1);
}

.chats-header h5 {
    margin: 0;
    font-weight: 600;
    color: var(--text-primary);
    font-size: 1.1rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.chats-header h5 i {
    font-size: 1.2rem;
}

/* Chats Content Improvements */
.chats-content {
    flex: 1;
    overflow-y: auto;
    padding: 1.5rem;
    scroll-behavior: smooth;
}

.chats-content::-webkit-scrollbar {
    width: 8px;
}

.chats-content::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 4px;
}

.chats-content::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.2);
    border-radius: 4px;
}

.chats-content::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.3);
}

/* Alert Improvements */
.alert {
    border-radius: var(--border-radius);
    padding: 0.875rem 1rem;
    margin-bottom: 1.5rem;
    font-size: 0.9rem;
    display: flex;
    align-items: center;
    gap: 0.75rem;
    box-shadow: var(--shadow-light);
    border: none;
}

.alert-success {
    background: linear-gradient(135deg, #28a745, #20c997);
    color: white;
}

.alert-danger {
    background: linear-gradient(135deg, #dc3545, #c82333);
    color: white;
}

.alert i {
    font-size: 1.1rem;
}

/* Search Container Improvements */
.search-container {
    display: flex;
    gap: 1rem;
    margin-bottom: 1.5rem;
    align-items: center;
}

.search-box {
    flex: 1;
    position: relative;
}

.search-box input {
    width: 100%;
    padding: 0.75rem 1rem 0.75rem 2.5rem;
    background: var(--input-bg);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    color: var(--text-primary);
    font-size: 0.9rem;
    transition: all var(--transition-speed) ease;
}

.search-box input:focus {
    outline: none;
    border-color: #667eea;
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
}

.search-box i {
    position: absolute;
    left: 1rem;
    top: 50%;
    transform: translateY(-50%);
    color: var(--text-secondary);
    font-size: 0.9rem;
}

.select-all {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1rem;
    background: var(--card-bg);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: all var(--transition-speed) ease;
    white-space: nowrap;
}

.select-all:hover {
    background: #2d3748;
    transform: translateY(-1px);
    box-shadow: var(--shadow-light);
}

.select-all input {
    margin: 0;
    cursor: pointer;
}

/* Chat List Improvements */
.chat-list {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1rem;
}

.chat-card {
    background: var(--card-bg);
    border-radius: var(--border-radius);
    padding: 1.25rem;
    border: 1px solid var(--border-color);
    box-shadow: var(--shadow-light);
    transition: all var(--transition-speed) ease;
    position: relative;
    cursor: pointer;
    overflow: hidden;
}

.chat-card:hover {
    transform: translateY(-3px);
    box-shadow: var(--shadow-medium);
    border-color: #4a5568;
}

.chat-card h6 {
    margin: 0 0 0.5rem 0;
    font-weight: 600;
    font-size: 0.95rem;
    color: var(--text-primary);
    display: flex;
    align-items: center;
    gap: 0.5rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.chat-card h6 i {
    color: #667eea;
    flex-shrink: 0;
}

.chat-card p {
    margin: 0 0 0.75rem 0;
    font-size: 0.85rem;
    color: var(--text-secondary);
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    line-height: 1.5;
}

.chat-card small {
    display: block;
    font-size: 0.75rem;
    color: var(--text-secondary);
    opacity: 0.8;
}

.chat-card .checkbox {
    position: absolute;
    top: 1rem;
    right: 1rem;
    width: 18px;
    height: 18px;
    cursor: pointer;
    z-index: 2;
    appearance: none;
    -webkit-appearance: none;
    background: var(--card-bg);
    border: 1px solid var(--border-color);
    border-radius: 4px;
    transition: all 0.2s ease;
}

.chat-card .checkbox:checked {
    background: #667eea;
    border-color: #667eea;
}

.chat-card .checkbox:checked::after {
    content: '\f00c';
    font-family: 'Font Awesome 6 Free';
    font-weight: 900;
    color: white;
    font-size: 0.7rem;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.chat-card .delete-btn {
    position: absolute;
    bottom: 1rem;
    right: 1rem;
    background: rgba(220, 53, 69, 0.2);
    border: none;
    color: #dc3545;
    width: 28px;
    height: 28px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all var(--transition-speed) ease;
    font-size: 0.75rem;
    cursor: pointer;
    z-index: 2;
}

.chat-card .delete-btn:hover {
    background: #dc3545;
    color: white;
    transform: scale(1.1);
}

/* Bulk Actions Improvements */
.bulk-actions {
    display: flex;
    gap: 1rem;
    margin-top: 1.5rem;
    padding-top: 1.5rem;
    border-top: 1px solid var(--border-color);
    animation: fadeIn 0.3s ease;
}

.bulk-actions button {
    padding: 0.5rem 1rem;
    border-radius: 8px;
    font-weight: 500;
    font-size: 0.85rem;
    transition: all var(--transition-speed) ease;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    border: none;
}

.bulk-actions .delete-selected {
    background: rgba(220, 53, 69, 0.2);
    border: 1px solid rgba(220, 53, 69, 0.3);
    color: #dc3545;
}

.bulk-actions .delete-selected:hover {
    background: #dc3545;
    color: white;
    transform: translateY(-1px);
    box-shadow: var(--shadow-light);
}

/* Empty State Improvements */
.empty-state {
    text-align: center;
    padding: 3rem 1rem;
    color: var(--text-secondary);
    animation: fadeIn 0.5s ease;
}

.empty-state i {
    font-size: 3rem;
    margin-bottom: 1rem;
    opacity: 0.3;
    display: block;
    color: var(--text-secondary);
}

.empty-state h5 {
    color: var(--text-primary);
    margin-bottom: 0.5rem;
    font-size: 1.1rem;
}

.empty-state p {
    font-size: 0.9rem;
    max-width: 300px;
    margin: 0 auto;
    line-height: 1.5;
}

/* Sidebar Overlay Improvements */
.sidebar-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    z-index: 999;
    backdrop-filter: blur(2px);
    animation: fadeIn 0.3s ease;
}

/* Modal Improvements */
.modal-content {
    background: var(--card-bg) !important;
    color: var(--text-primary) !important;
    border: 1px solid var(--border-color) !important;
    border-radius: var(--border-radius) !important;
    box-shadow: var(--shadow-heavy) !important;
}

.modal-header {
    border-bottom: 1px solid var(--border-color) !important;
    padding: 1.25rem !important;
}

.modal-title {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.modal-body {
    padding: 1.25rem !important;
}

.modal-footer {
    border-top: 1px solid var(--border-color) !important;
    padding: 1rem 1.25rem !important;
}

.btn-close {
    filter: invert(1) !important;
}

.alert-warning {
    background: linear-gradient(135deg, #ffc107, #ff9800) !important;
    color: white !important;
    border: none !important;
    display: flex !important;
    align-items: center !important;
    gap: 0.5rem !important;
}

/* Animations */
@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes slideIn {
    from {
        transform: translateY(-20px);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

/* Loading States */
.loading {
    opacity: 0.7;
    pointer-events: none;
    position: relative;
}

.loading::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.2);
    z-index: 100;
    backdrop-filter: blur(2px);
}

/* Focus Styles */
.btn:focus,
.form-control:focus,
.checkbox:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.3);
}

/* Responsive Design Improvements */
@media (max-width: 1024px) {
    :root {
        --sidebar-width: 280px;
    }
    
    .chats-content {
        padding: 1.25rem;
    }
    
    .chat-list {
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    }
}

@media (max-width: 768px) {
    body {
        font-size: 13px;
    }
    
    .sidebar {
        position: fixed;
        left: 0;
        top: 0;
        height: 100vh;
        width: 280px;
        z-index: 1000;
        transform: translateX(-100%);
    }
    
    .sidebar.show {
        transform: translateX(0);
    }
    
    .btn-toggle-sidebar {
        display: block;
    }
    
    .main-chats {
        width: 100%;
    }
    
    .chats-header {
        padding: 0.875rem 1.25rem;
    }
    
    .chats-content {
        padding: 1rem;
    }
    
    .chat-list {
        grid-template-columns: 1fr;
    }
    
    .search-container {
        flex-direction: column;
        align-items: stretch;
    }
    
    .select-all {
        width: 100%;
        justify-content: center;
    }
    
    .sidebar-header {
        padding: 1.25rem;
    }
    
    .sidebar-header h4 {
        font-size: 1.1rem;
    }
    
    .sidebar-overlay.show {
        display: block;
    }
}

@media (max-width: 480px) {
    .sidebar {
        width: 100%;
    }
    
    .chats-content {
        padding: 0.875rem;
    }
    
    .chats-header {
        padding: 0.75rem 1rem;
    }
    
    .modal-dialog {
        margin: 0.5rem !important;
    }
    
    .modal-content {
        margin: 0 !important;
    }
    
    .user-avatar {
        width: 36px;
        height: 36px;
        font-size: 0.9rem;
    }
    
    .user-details h6 {
        max-width: 140px;
    }
    
    .sidebar-actions {
        flex-direction: column;
    }
    
    .sidebar-actions .btn {
        width: 100%;
    }
    
    .bulk-actions {
        flex-direction: column;
    }
    
    .bulk-actions button {
        width: 100%;
        justify-content: center;
    }
}

/* Print styles */
@media print {
    .sidebar,
    .btn-toggle-sidebar {
        display: none !important;
    }
    
    .main-chats {
        width: 100% !important;
    }
    
    .chats-content {
        overflow: visible !important;
        height: auto !important;
    }
    
    body {
        background: white !important;
        color: black !important;
    }
    
    .chat-card {
        background: white !important;
        color: black !important;
        border: 1px solid #ddd !important;
        break-inside: avoid;
        margin-bottom: 1rem;
    }
}
@media (max-width: 768px) {
    /* Update the sidebar width to 75% */
    .sidebar {
        width: 77%;
        transform: translateX(-100%);
        transition: transform 0.3s ease;
        position: fixed;
        height: 100vh;
        z-index: 1000;
        box-shadow: 5px 0 15px rgba(0, 0, 0, 0.2);
    }
    
    .sidebar.show {
        transform: translateX(0);
    }
    
    /* Adjust the overlay to match */
    .sidebar-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        z-index: 999;
        backdrop-filter: blur(2px);
        animation: fadeIn 0.3s ease;
    }
    
    .sidebar-overlay.show {
        display: block;
    }
}
    </style>
</head>
<body>
    <div class="sidebar-overlay" id="sidebarOverlay" onclick="toggleSidebar()"></div>
    
    <div class="chats-container">
        <!-- Sidebar -->
        <div class="sidebar" id="sidebar">
            <div class="sidebar-header">
                <h4><i class="fas fa-robot"></i>AI ChatBot</h4>
                <a href="/chat" class="back-to-chat-btn">
                    <i class="fas fa-arrow-left"></i> Back to Chat
                </a>
            </div>
            
            <div class="sidebar-footer">
                <div class="user-info">
                    <div class="user-avatar">
                        <i class="fas fa-user"></i>
                    </div>
                    <div class="user-details">
                        <h6><%= user.name %></h6>
                        <small><%= user.email %></small>
                    </div>
                </div>
                <div class="sidebar-actions">
    <a href="/profile" class="btn btn-outline-primary active">
        <i class="fas fa-user"></i> Profile
    </a>
    <button type="button" class="btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#logoutModal" style="width: 100%;">
        <i class="fas fa-sign-out-alt"></i> Logout
    </button>
</div>
            </div>
        </div>
        
        <!-- Main Chats Area -->
        <div class="main-chats">
            <div class="chats-header">
                <button class="btn-toggle-sidebar" onclick="toggleSidebar()">
                    <i class="fas fa-bars"></i>
                </button>
                <h5><i class="fas fa-comments"></i> All Chats</h5>
            </div>
            
            <div class="chats-content">
                <% if (success) { %>
                    <div class="alert alert-success" role="alert">
                        <i class="fas fa-check-circle me-2"></i>
                        <%= success %>
                    </div>
                <% } %>
                
                <% if (error) { %>
                    <div class="alert alert-danger" role="alert">
                        <i class="fas fa-exclamation-circle me-2"></i>
                        <%= error %>
                    </div>
                <% } %>
                
                <div class="search-container">
                    <div class="search-box">
                        <i class="fas fa-search"></i>
                        <input type="text" id="searchInput" placeholder="Search chats...">
                    </div>
                    <div class="select-all" onclick="toggleSelectAll()">
                        <input type="checkbox" id="selectAllCheckbox">
                        <span>Select All</span>
                    </div>
                </div>
                
                <% if (chats && chats.length > 0) { %>
                    <div class="chat-list" id="chatList">
                        <% chats.forEach(chat => { %>
                            <div class="chat-card" data-chat-id="<%= chat._id %>">
                                <input type="checkbox" class="checkbox chat-checkbox" onclick="event.stopPropagation()">
                                <h6><i class="fas fa-comment"></i> <%= chat.title %></h6>
                                <p>
                                    <% if (chat.messages && chat.messages.length > 0) { %>
                                        <%= chat.messages[0].content.substring(0, 100) %>
                                        <% if (chat.messages[0].content.length > 100) { %>...<% } %>
                                    <% } else { %>
                                        No messages in this chat
                                    <% } %>
                                </p>
                                <small>Last updated: <%= new Date(chat.updatedAt).toLocaleString() %></small>
                                <button class="delete-btn" onclick="deleteChat(event, '<%= chat._id %>')">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        <% }) %>
                    </div>
                    
                    <div class="bulk-actions" id="bulkActions" style="display: none;">
                        <button class="delete-selected" onclick="deleteSelectedChats()">
                            <i class="fas fa-trash me-1"></i> Delete Selected
                        </button>
                    </div>
                <% } else { %>
                    <div class="empty-state">
                        <i class="fas fa-comments"></i>
                        <h5>No chats yet</h5>
                        <p>Start a new conversation in the chat interface</p>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
    
    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content" style="background: var(--card-bg); color: var(--text-primary); border: 1px solid var(--border-color);">
                <div class="modal-header" style="border-bottom: 1px solid var(--border-color);">
                    <h5 class="modal-title" id="deleteModalLabel">
                        <i class="fas fa-exclamation-triangle text-danger me-2"></i>Confirm Deletion
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" style="filter: invert(1);"></button>
                </div>
                <div class="modal-body">
                    <p id="deleteModalMessage">Are you sure you want to delete this chat?</p>
                    <div class="alert alert-danger">
                        <strong>Warning:</strong> This action cannot be undone!
                    </div>
                </div>
                <div class="modal-footer" style="border-top: 1px solid var(--border-color);">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn">
                        <i class="fas fa-trash me-2"></i>Delete
                    </button>
                </div>
            </div>
        </div>
    </div>


     <!-- Logout Confirmation Modal -->
<div class="modal fade" id="logoutModal" tabindex="-1" aria-labelledby="logoutModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" style="background: var(--card-bg); color: var(--text-primary); border: 1px solid var(--border-color);">
            <div class="modal-header" style="border-bottom: 1px solid var(--border-color);">
                <h5 class="modal-title" id="logoutModalLabel">
                    <i class="fas fa-sign-out-alt text-primary me-2"></i>Confirm Logout
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" style="filter: invert(1);"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to logout?</p>
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-circle me-2"></i>You'll need to login again to access your account.
                </div>
            </div>
            <div class="modal-footer" style="border-top: 1px solid var(--border-color);">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form method="POST" action="/logout" style="display: inline;">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-sign-out-alt me-2"></i>Yes, Logout
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Toggle sidebar on mobile
function toggleSidebar() {
    const sidebar = document.getElementById('sidebar');
    const overlay = document.getElementById('sidebarOverlay');
    sidebar.classList.toggle('show');
    overlay.classList.toggle('show');
}
        // Search functionality
        document.getElementById('searchInput').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const chatCards = document.querySelectorAll('.chat-card');
            
            chatCards.forEach(card => {
                const title = card.querySelector('h6').textContent.toLowerCase();
                const content = card.querySelector('p').textContent.toLowerCase();
                
                if (title.includes(searchTerm)) {
                    card.style.display = 'block';
                } else if (content.includes(searchTerm)) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });
        });
        
        // Toggle select all
        function toggleSelectAll() {
            const selectAllCheckbox = document.getElementById('selectAllCheckbox');
            const chatCheckboxes = document.querySelectorAll('.chat-checkbox');
            const bulkActions = document.getElementById('bulkActions');
            
            const isChecked = !selectAllCheckbox.checked;
            selectAllCheckbox.checked = isChecked;
            
            chatCheckboxes.forEach(checkbox => {
                checkbox.checked = isChecked;
            });
            
            bulkActions.style.display = isChecked ? 'flex' : 'none';
        }
        
        // Show/hide bulk actions when individual checkboxes are checked
        document.addEventListener('change', function(e) {
            if (e.target.classList.contains('chat-checkbox')) {
                const anyChecked = document.querySelectorAll('.chat-checkbox:checked').length > 0;
                document.getElementById('bulkActions').style.display = anyChecked ? 'flex' : 'none';
                
                // Update select all checkbox
                const allChecked = document.querySelectorAll('.chat-checkbox:checked').length === 
                                  document.querySelectorAll('.chat-checkbox').length;
                document.getElementById('selectAllCheckbox').checked = allChecked;
            }
        });
        
        // Delete single chat
        function deleteChat(event, chatId) {
            event.stopPropagation();
            
            const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            const deleteModalMessage = document.getElementById('deleteModalMessage');
            const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
            
            deleteModalMessage.textContent = 'Are you sure you want to delete this chat?';
            
            // Remove previous event listeners
            const newConfirmDeleteBtn = confirmDeleteBtn.cloneNode(true);
            confirmDeleteBtn.parentNode.replaceChild(newConfirmDeleteBtn, confirmDeleteBtn);
            
            newConfirmDeleteBtn.onclick = async function() {
                try {
                    const response = await fetch(`/api/chat/${chatId}`, {
                        method: 'DELETE'
                    });
                    
                    const data = await response.json();
                    
                    if (data.success) {
                        // Remove from UI
                        const chatCard = document.querySelector(`[data-chat-id="${chatId}"]`);
                        if (chatCard) {
                            chatCard.remove();
                        }
                        
                        // If no chats left, show empty state
                        if (document.querySelectorAll('.chat-card').length === 0) {
                            document.getElementById('chatList').innerHTML = `
                                <div class="empty-state">
                                    <i class="fas fa-comments"></i>
                                    <h5>No chats yet</h5>
                                    <p>Start a new conversation in the chat interface</p>
                                </div>
                            `;
                        }
                    } else {
                        alert('Error deleting chat');
                    }
                } catch (error) {
                    console.error('Error deleting chat:', error);
                    alert('Error deleting chat');
                } finally {
                    deleteModal.hide();
                }
            };
            
            deleteModal.show();
        }
        
        // Delete selected chats
        async function deleteSelectedChats() {
            const selectedChats = Array.from(document.querySelectorAll('.chat-checkbox:checked'))
                .map(checkbox => checkbox.closest('.chat-card').getAttribute('data-chat-id'));
            
            if (selectedChats.length === 0) return;
            
            const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            const deleteModalMessage = document.getElementById('deleteModalMessage');
            const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
            
            deleteModalMessage.textContent = `Are you sure you want to delete ${selectedChats.length} selected chat(s)?`;
            
            // Remove previous event listeners
            const newConfirmDeleteBtn = confirmDeleteBtn.cloneNode(true);
            confirmDeleteBtn.parentNode.replaceChild(newConfirmDeleteBtn, confirmDeleteBtn);
            
            newConfirmDeleteBtn.onclick = async function() {
                try {
                    // Show loading state
                    newConfirmDeleteBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Deleting...';
                    newConfirmDeleteBtn.disabled = true;
                    
                    // Delete each chat
                    for (const chatId of selectedChats) {
                        await fetch(`/api/chat/${chatId}`, {
                            method: 'DELETE'
                        });
                        
                        // Remove from UI
                        const chatCard = document.querySelector(`[data-chat-id="${chatId}"]`);
                        if (chatCard) {
                            chatCard.remove();
                        }
                    }
                    
                    // Reset UI
                    document.getElementById('selectAllCheckbox').checked = false;
                    document.getElementById('bulkActions').style.display = 'none';
                    
                    // If no chats left, show empty state
                    if (document.querySelectorAll('.chat-card').length === 0) {
                        document.getElementById('chatList').innerHTML = `
                            <div class="empty-state">
                                <i class="fas fa-comments"></i>
                                <h5>No chats yet</h5>
                                <p>Start a new conversation in the chat interface</p>
                            </div>
                        `;
                    }
                } catch (error) {
                    console.error('Error deleting chats:', error);
                    alert('Error deleting some chats');
                } finally {
                    deleteModal.hide();
                }
            };
            
            deleteModal.show();
        }
        
        // Close sidebar when clicking outside on mobile
        // Close sidebar when clicking outside on mobile
document.addEventListener('click', function(event) {
    const sidebar = document.getElementById('sidebar');
    const toggleBtn = document.querySelector('.btn-toggle-sidebar');
    const overlay = document.getElementById('sidebarOverlay');
    
    if (window.innerWidth <= 768 && sidebar.classList.contains('show')) {
        if (!sidebar.contains(event.target) && !toggleBtn.contains(event.target)) {
            sidebar.classList.remove('show');
            overlay.classList.remove('show');
        }
    }
});
        
        // Handle window resize
window.addEventListener('resize', function() {
    const sidebar = document.getElementById('sidebar');
    const overlay = document.getElementById('sidebarOverlay');
    
    if (window.innerWidth > 768) {
        sidebar.classList.remove('show');
        overlay.classList.remove('show');
    }
});
        
       // Make chat cards clickable to view the chat
document.querySelectorAll('.chat-card').forEach(card => {
    card.addEventListener('click', function(e) {
        // Don't navigate if clicking on checkbox or delete button
        if (e.target.classList.contains('checkbox') || 
            e.target.classList.contains('delete-btn') ||
            e.target.closest('.checkbox') || 
            e.target.closest('.delete-btn')) {
            return;
        }
        
        const chatId = this.getAttribute('data-chat-id');
        // UPDATED: Navigate to main chat page with chatId parameter
        window.location.href = `/chat?chatId=${chatId}`;
    });
});
    </script>
</body>
</html>