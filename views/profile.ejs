<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile - AI ChatBot</title>
    <link rel="icon" href="/ai.png" type="image/x-img">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
    :root {
        --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        --secondary-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        --success-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        --dark-bg: #0d1117;
        --darker-bg: #010409;
        --card-bg: #161b22;
        --sidebar-bg: #21262d;
        --text-primary: #e6edf3;
        --text-secondary: #7d8590;
        --border-color: #30363d;
        --shadow-light: 0 2px 10px rgba(0, 0, 0, 0.3);
        --shadow-medium: 0 4px 20px rgba(0, 0, 0, 0.4);
        --shadow-heavy: 0 8px 30px rgba(0, 0, 0, 0.5);
        --input-bg: #0d1117;
        --sidebar-width: 320px;
        --transition-speed: 0.3s;
        --border-radius: 12px;
    }

    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    html {
        height: 100%;
        scroll-behavior: smooth;
    }

    body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
        background: var(--dark-bg);
        min-height: 100vh;
        font-size: 14px;
        line-height: 1.6;
        color: var(--text-primary);
        display: flex;
        flex-direction: column;
        overflow-x: hidden;
    }

    /* Profile Container */
    .profile-container {
        display: flex;
        height: 100vh;
        width: 100%;
        position: relative;
        overflow: hidden;
    }

    /* Sidebar - Same as chats.ejs */
    .sidebar {
        width: var(--sidebar-width);
        background: var(--sidebar-bg);
        backdrop-filter: blur(20px);
        border-right: 1px solid var(--border-color);
        display: flex;
        flex-direction: column;
        transition: transform var(--transition-speed) cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: var(--shadow-medium);
        z-index: 100;
        position: relative;
        will-change: transform;
    }

    .sidebar-header {
        padding: 1.5rem;
        border-bottom: 1px solid var(--border-color);
        background: rgba(102, 126, 234, 0.1);
        position: relative;
    }

    .sidebar-header h4 {
        margin: 0 0 1rem 0;
        color: var(--text-primary);
        font-weight: 700;
        font-size: 1.25rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .sidebar-header h4 i {
        background: var(--primary-gradient);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        font-size: 1.5rem;
    }

    .back-to-chat-btn {
        width: 100%;
        background: var(--primary-gradient);
        color: white;
        border: none;
        padding: 0.75rem 1.25rem;
        border-radius: var(--border-radius);
        font-weight: 600;
        font-size: 0.9rem;
        transition: all var(--transition-speed) cubic-bezier(0.4, 0, 0.2, 1);
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        box-shadow: var(--shadow-light);
        text-decoration: none;
        cursor: pointer;
        position: relative;
        overflow: hidden;
    }

    .back-to-chat-btn:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-heavy);
        filter: brightness(1.1);
    }

    .back-to-chat-btn:active {
        transform: translateY(0);
    }

    .back-to-chat-btn::after {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: linear-gradient(
            to bottom right,
            rgba(255, 255, 255, 0.3),
            rgba(255, 255, 255, 0)
        );
        transform: rotate(30deg);
        transition: all 0.5s ease;
        opacity: 0;
    }

    .back-to-chat-btn:hover::after {
        opacity: 1;
        animation: shine 1.5s infinite;
    }

    /* Sidebar Footer - Same as chats.ejs */
    .sidebar-footer {
        padding: 1.25rem;
        border-top: 1px solid var(--border-color);
        background: rgba(0, 0, 0, 0.2);
    }

    .user-info {
        display: flex;
        align-items: center;
        margin-bottom: 1rem;
        padding: 0.75rem;
        background: var(--card-bg);
        border-radius: var(--border-radius);
        box-shadow: var(--shadow-light);
        border: 1px solid var(--border-color);
        transition: all var(--transition-speed) ease;
    }

    .user-info:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-medium);
    }

    .user-avatar {
        width: 42px;
        height: 42px;
        border-radius: 50%;
        background: var(--primary-gradient);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        margin-right: 0.75rem;
        box-shadow: var(--shadow-light);
        font-size: 1.1rem;
        flex-shrink: 0;
    }

    .user-details h6 {
        margin: 0 0 0.125rem 0;
        font-weight: 600;
        color: var(--text-primary);
        font-size: 0.9rem;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 180px;
    }

    .user-details small {
        color: var(--text-secondary);
        font-size: 0.75rem;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 180px;
        display: block;
    }

    .sidebar-actions {
        display: flex;
        gap: 0.75rem;
    }

    .sidebar-actions .btn {
        flex: 1;
        font-size: 0.8rem;
        padding: 0.625rem 0.75rem;
        border-radius: 10px;
        font-weight: 500;
        transition: all var(--transition-speed) cubic-bezier(0.4, 0, 0.2, 1);
        border: 1px solid var(--border-color);
        background: var(--card-bg);
        color: var(--text-primary);
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .sidebar-actions .btn:hover {
        transform: translateY(-1px);
        box-shadow: var(--shadow-light);
        background: #2d3748;
    }

    .sidebar-actions .btn i {
        font-size: 0.9rem;
    }

    /* Main Profile Area */
    .main-profile {
        flex: 1;
        display: flex;
        flex-direction: column;
        background: var(--dark-bg);
        position: relative;
        overflow-y: auto;
        transition: all var(--transition-speed) ease;
    }

    .profile-header {
        padding: 1rem 1.5rem;
        border-bottom: 1px solid var(--border-color);
        display: flex;
        align-items: center;
        background: var(--card-bg);
        backdrop-filter: blur(20px);
        box-shadow: var(--shadow-light);
        z-index: 10;
        position: sticky;
        top: 0;
    }

    .btn-toggle-sidebar {
        display: none;
        background: none;
        border: none;
        font-size: 1.25rem;
        margin-right: 1rem;
        color: var(--text-primary);
        padding: 0.5rem;
        border-radius: 8px;
        transition: all var(--transition-speed) ease;
        cursor: pointer;
    }

    .btn-toggle-sidebar:hover {
        background: rgba(255, 255, 255, 0.1);
    }

    .profile-header h5 {
        margin: 0;
        font-weight: 600;
        color: var(--text-primary);
        font-size: 1.1rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .profile-header h5 i {
        font-size: 1.2rem;
    }

    /* Profile Content */
    .profile-content {
        flex: 1;
        overflow-y: auto;
        padding: 1.5rem;
        scroll-behavior: smooth;
    }

    .profile-content::-webkit-scrollbar {
        width: 8px;
    }

    .profile-content::-webkit-scrollbar-track {
        background: rgba(255, 255, 255, 0.05);
        border-radius: 4px;
    }

    .profile-content::-webkit-scrollbar-thumb {
        background: rgba(255, 255, 255, 0.2);
        border-radius: 4px;
    }

    .profile-content::-webkit-scrollbar-thumb:hover {
        background: rgba(255, 255, 255, 0.3);
    }

    /* Profile Cards */
    .profile-card {
        background: var(--card-bg);
        border-radius: var(--border-radius);
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        border: 1px solid var(--border-color);
        box-shadow: var(--shadow-light);
        transition: all var(--transition-speed) ease;
    }

    .profile-card:hover {
        transform: translateY(-3px);
        box-shadow: var(--shadow-medium);
        border-color: #4a5568;
    }

    .profile-card h6 {
        margin: 0 0 1.5rem 0;
        font-weight: 600;
        color: var(--text-primary);
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .profile-card h6 i {
        color: #667eea;
    }

    /* Stats Grid */
    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    .stat-card {
        background: rgba(102, 126, 234, 0.1);
        border-radius: var(--border-radius);
        padding: 1rem;
        text-align: center;
        border: 1px solid var(--border-color);
        transition: all var(--transition-speed) ease;
        cursor: pointer;
    }

    .stat-card:hover {
        transform: translateY(-3px);
        box-shadow: var(--shadow-light);
        background: rgba(102, 126, 234, 0.2);
    }

    .stat-card i {
        font-size: 1.5rem;
        color: #667eea;
        margin-bottom: 0.5rem;
    }

    .stat-card h4 {
        color: var(--text-primary);
        margin-bottom: 0.25rem;
        font-weight: 600;
        font-size: 1.25rem;
    }

    .stat-card p {
        color: var(--text-secondary);
        margin: 0;
        font-size: 0.75rem;
    }

    /* Form Styles */
    .form-floating {
        margin-bottom: 1rem;
    }

    .form-control, .form-select {
        background-color: var(--input-bg);
        border: 1px solid var(--border-color);
        color: var(--text-primary);
        border-radius: var(--border-radius);
        transition: all var(--transition-speed) ease;
    }

    .form-control:focus, .form-select:focus {
        background-color: var(--input-bg);
        border-color: #667eea;
        color: var(--text-primary);
        box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
    }

    .form-control::placeholder {
        color: var(--text-secondary);
        opacity: 0.7;
    }

    .form-floating>label {
        color: var(--text-secondary);
        background: transparent;
        padding-left: 2.5rem;
    }

    .form-floating>.form-control:focus~label,
    .form-floating>.form-control:not(:placeholder-shown)~label {
        transform: scale(.85) translateY(-0.5rem) translateX(0.15rem);
        color: var(--text-secondary);
        opacity: 0.8;
    }

    .form-floating>.form-control:focus~label::after,
    .form-floating>.form-control:not(:placeholder-shown)~label::after {
        content: '';
        position: absolute;
        left: 1rem;
        top: 50%;
        transform: translateY(-50%);
        width: 1rem;
        height: 1rem;
        background-color: currentColor;
        mask-image: var(--bs-form-floating-icon);
        mask-repeat: no-repeat;
        mask-size: 1rem 1rem;
    }

    /* Button Styles */
    .btn {
        transition: all var(--transition-speed) cubic-bezier(0.4, 0, 0.2, 1);
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .btn-primary {
        background: var(--primary-gradient);
        border: none;
        box-shadow: var(--shadow-light);
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-medium);
        filter: brightness(1.1);
    }

    .btn-outline-primary {
        border: 1px solid #667eea;
        color: #667eea;
    }

    .btn-outline-primary:hover {
        background: #667eea;
        color: white;
        transform: translateY(-2px);
        box-shadow: var(--shadow-light);
    }

    .btn-danger {
        background: linear-gradient(135deg, #f5576c, #f093fb);
        border: none;
        box-shadow: var(--shadow-light);
    }

    .btn-danger:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-medium);
        filter: brightness(1.1);
    }

    /* Danger Zone */
    .danger-zone {
        background: rgba(255, 107, 107, 0.1);
        border: 1px solid rgba(255, 107, 107, 0.3);
        transition: all var(--transition-speed) ease;
    }

    .danger-zone:hover {
        transform: translateY(-3px);
        box-shadow: var(--shadow-medium);
        background: rgba(255, 107, 107, 0.2);
    }

    .danger-zone h6 {
        color: #dc3545;
    }

    /* Alert Styles */
    .alert {
        border-radius: var(--border-radius);
        padding: 0.875rem 1rem;
        margin-bottom: 1.5rem;
        font-size: 0.9rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        box-shadow: var(--shadow-light);
        border: none;
    }

    .alert-success {
        background: var(--success-gradient);
        color: white;
    }

    .alert-danger {
        background: var(--secondary-gradient);
        color: white;
    }

    .alert-warning {
        background: linear-gradient(135deg, #ffc107, #ff9800);
        color: white;
    }

    .alert i {
        font-size: 1.1rem;
    }

    /* Modal Styles - Same as chats.ejs */
    .modal-content {
        background: var(--card-bg) !important;
        color: var(--text-primary) !important;
        border: 1px solid var(--border-color) !important;
        border-radius: var(--border-radius) !important;
        box-shadow: var(--shadow-heavy) !important;
    }

    .modal-header {
        border-bottom: 1px solid var(--border-color) !important;
        padding: 1.25rem !important;
    }

    .modal-title {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .modal-body {
        padding: 1.25rem !important;
    }

    .modal-footer {
        border-top: 1px solid var(--border-color) !important;
        padding: 1rem 1.25rem !important;
    }

    .btn-close {
        filter: invert(1) !important;
    }

    /* Animations */
    @keyframes fadeIn {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }

    @keyframes slideIn {
        from {
            transform: translateY(-20px);
            opacity: 0;
        }
        to {
            transform: translateY(0);
            opacity: 1;
        }
    }

    /* Loading States */
    .loading {
        opacity: 0.7;
        pointer-events: none;
        position: relative;
    }

    .loading::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.2);
        z-index: 100;
        backdrop-filter: blur(2px);
    }

    /* Responsive Design */
    @media (max-width: 1024px) {
        :root {
            --sidebar-width: 280px;
        }
        
        .profile-content {
            padding: 1.25rem;
        }
        
        .stats-grid {
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
        }
    }

    @media (max-width: 768px) {
        body {
            font-size: 13px;
        }
        
        .sidebar {
            position: fixed;
            left: 0;
            top: 0;
            height: 100vh;
            width: 280px;
            z-index: 1000;
            transform: translateX(-100%);
        }
        
        .sidebar.show {
            transform: translateX(0);
        }
        
        .btn-toggle-sidebar {
            display: block;
        }
        
        .main-profile {
            width: 100%;
        }
        
        .profile-header {
            padding: 0.875rem 1.25rem;
        }
        
        .profile-content {
            padding: 1rem;
        }
        
        .sidebar-header {
            padding: 1.25rem;
        }
        
        .sidebar-header h4 {
            font-size: 1.1rem;
        }
        
        .sidebar-overlay.show {
            display: block;
        }
    }

    @media (max-width: 480px) {
        .sidebar {
            width: 100%;
        }
        
        .profile-content {
            padding: 0.875rem;
        }
        
        .profile-header {
            padding: 0.75rem 1rem;
        }
        
        .modal-dialog {
            margin: 0.5rem !important;
        }
        
        .modal-content {
            margin: 0 !important;
        }
        
        .user-avatar {
            width: 36px;
            height: 36px;
            font-size: 0.9rem;
        }
        
        .user-details h6 {
            max-width: 140px;
        }
        
        .sidebar-actions {
            flex-direction: column;
        }
        
        .sidebar-actions .btn {
            width: 100%;
        }
        
        .stats-grid {
            grid-template-columns: 1fr;
        }
    }

    /* Print styles */
    @media print {
        .sidebar,
        .btn-toggle-sidebar {
            display: none !important;
        }
        
        .main-profile {
            width: 100% !important;
        }
        
        .profile-content {
            overflow: visible !important;
            height: auto !important;
        }
        
        body {
            background: white !important;
            color: black !important;
        }
        
        .profile-card {
            background: white !important;
            color: black !important;
            border: 1px solid #ddd !important;
            break-inside: avoid;
            margin-bottom: 1rem;
        }
    }
    @media (max-width: 768px) {
    /* Update the sidebar width to 75% */
    .sidebar {
        width: 77%;
        transform: translateX(-100%);
        transition: transform 0.3s ease;
        position: fixed;
        height: 100vh;
        z-index: 1000;
        box-shadow: 5px 0 15px rgba(0, 0, 0, 0.2);
    }
    
    .sidebar.show {
        transform: translateX(0);
    }
    
    /* Adjust the overlay to match */
    .sidebar-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        z-index: 999;
        backdrop-filter: blur(2px);
        animation: fadeIn 0.3s ease;
    }
    
    .sidebar-overlay.show {
        display: block;
    }
}
    </style>
</head>
<body>
    <div class="sidebar-overlay" id="sidebarOverlay" onclick="toggleSidebar()"></div>
    
    <div class="profile-container">
        <!-- Sidebar -->
        <div class="sidebar" id="sidebar">
            <div class="sidebar-header">
                <h4><i class="fas fa-robot"></i>AI ChatBot</h4>
                <a href="/chat" class="back-to-chat-btn">
                    <i class="fas fa-arrow-left"></i> Back to Chat
                </a>
            </div>
            
            <div class="sidebar-footer">
                <div class="user-info">
                    <div class="user-avatar">
                        <i class="fas fa-user"></i>
                    </div>
                    <div class="user-details">
                        <h6><%= user.name %></h6>
                        <small><%= user.email %></small>
                    </div>
                </div>
                <div class="sidebar-actions">
    <a href="/profile" class="btn btn-outline-primary active">
        <i class="fas fa-user"></i> Profile
    </a>
    <button type="button" class="btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#logoutModal" style="width: 100%;">
        <i class="fas fa-sign-out-alt"></i> Logout
    </button>
</div>
            </div>
        </div>
        
        <!-- Main Profile Area -->
        <div class="main-profile">
            <div class="profile-header">
                <button class="btn-toggle-sidebar" onclick="toggleSidebar()">
                    <i class="fas fa-bars"></i>
                </button>
                <h5><i class="fas fa-user-cog"></i> Profile Settings</h5>
            </div>
            
            <div class="profile-content">
                <% if (success) { %>
                    <div class="alert alert-success" role="alert">
                        <i class="fas fa-check-circle me-2"></i>
                        <%= success %>
                    </div>
                <% } %>
                
                <% if (error) { %>
                    <div class="alert alert-danger" role="alert">
                        <i class="fas fa-exclamation-circle me-2"></i>
                        <%= error %>
                    </div>
                <% } %>
                
                <div class="profile-card">
                    <h6><i class="fas fa-chart-line"></i> Account Overview</h6>
                    <!-- In the stats-grid section of profile.ejs -->
<div class="stats-grid">
    <div class="stat-card">
        <i class="fas fa-calendar-alt"></i>
        <h4><%= Math.max(1, Math.floor((new Date() - new Date(user.createdAt)) / (1000 * 60 * 60 * 24))) %></h4>
        <p>Days Active</p>
    </div>
    <div class="stat-card" onclick="window.location.href='/chats'" style="cursor: pointer;">
        <i class="fas fa-comments"></i>
        <h4><%= chatCount || '0' %></h4>
        <p>Total Chats</p>
    </div>
    <div class="stat-card">
    <i class="fas fa-clock"></i>
    <h4><%= new Date(user.createdAt).toLocaleDateString('en-GB') %></h4>
    <p>Joined</p>
</div>
</div>
                </div>
                
                <div class="profile-card">
                    <h6><i class="fas fa-user-edit"></i> Update Profile</h6>
                    <form method="POST" action="/update-profile">
                        <div class="form-floating">
                            <input type="text" class="form-control" id="name" name="name" value="<%= user.name %>" required>
                            <label for="name"><i class="fas fa-user me-2"></i>Full Name</label>
                        </div>
                        
                        <div class="form-floating">
                            <input type="email" class="form-control" id="email" name="email" value="<%= user.email %>" required>
                            <label for="email"><i class="fas fa-envelope me-2"></i>Email Address</label>
                        </div>
                        
                        <div class="d-grid mt-3">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-2"></i>Update Profile
                            </button>
                        </div>
                    </form>
                </div>
                
                <div class="profile-card">
                    <h6><i class="fas fa-key"></i> Change Password</h6>
                    <form method="POST" action="/change-password">
                        <div class="form-floating">
                            <input type="password" class="form-control" id="currentPassword" name="currentPassword" required>
                            <label for="currentPassword"><i class="fas fa-lock me-2"></i>Current Password</label>
                        </div>
                        
                        <div class="form-floating">
                            <input type="password" class="form-control" id="newPassword" name="newPassword" required minlength="6">
                            <label for="newPassword"><i class="fas fa-key me-2"></i>New Password</label>
                        </div>
                        
                        <div class="form-floating">
                            <input type="password" class="form-control" id="confirmNewPassword" name="confirmNewPassword" required>
                            <label for="confirmNewPassword"><i class="fas fa-key me-2"></i>Confirm New Password</label>
                        </div>
                        
                        <div class="d-grid mt-3">
                            <button type="submit" class="btn btn-outline-primary">
                                <i class="fas fa-key me-2"></i>Change Password
                            </button>
                        </div>
                    </form>
                </div>
                
                <div class="profile-card danger-zone">
                    <h6><i class="fas fa-exclamation-triangle"></i> Danger Zone</h6>
                    <p>
                        Permanently delete your account and all associated data. This action cannot be undone.
                    </p>
                    <button type="button" class="btn btn-danger" onclick="confirmDeleteAccount()">
                        <i class="fas fa-trash me-2"></i>Delete Account
                    </button>
                </div>
            </div>
        </div>
    </div>


    <!-- Logout Confirmation Modal -->
<div class="modal fade" id="logoutModal" tabindex="-1" aria-labelledby="logoutModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" style="background: var(--card-bg); color: var(--text-primary); border: 1px solid var(--border-color);">
            <div class="modal-header" style="border-bottom: 1px solid var(--border-color);">
                <h5 class="modal-title" id="logoutModalLabel">
                    <i class="fas fa-sign-out-alt text-primary me-2"></i>Confirm Logout
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" style="filter: invert(1);"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to logout?</p>
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-circle me-2"></i>You'll need to login again to access your account.
                </div>
            </div>
            <div class="modal-footer" style="border-top: 1px solid var(--border-color);">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form method="POST" action="/logout" style="display: inline;">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-sign-out-alt me-2"></i>Yes, Logout
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>
    
    <!-- Delete Account Modal -->
    <div class="modal fade" id="deleteAccountModal" tabindex="-1" aria-labelledby="deleteAccountModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content" style="background: var(--card-bg); color: var(--text-primary); border: 1px solid var(--border-color);">
                <div class="modal-header" style="border-bottom: 1px solid var(--border-color);">
                    <h5 class="modal-title" id="deleteAccountModalLabel">
                        <i class="fas fa-exclamation-triangle text-danger me-2"></i>Delete Account
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" style="filter: invert(1);"></button>
                </div>
                <div class="modal-body">
                    <p>Are you absolutely sure you want to delete your account?</p>
                    <div class="alert alert-danger">
                        <strong>This action cannot be undone!</strong> This will permanently delete your account and all your chat history.
                    </div>
                    <p>Please type <strong>DELETE</strong> to confirm:</p>
                    <input type="text" class="form-control" id="deleteConfirmInput" placeholder="Type DELETE to confirm">
                </div>
                <div class="modal-footer" style="border-top: 1px solid var(--border-color);">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <form method="POST" action="/delete-account" style="display: inline;">
                        <button type="submit" class="btn btn-danger" id="confirmDeleteBtn" disabled>
                            <i class="fas fa-trash me-2"></i>Delete My Account
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Enhanced client-side validation for profile.ejs
// Add this to replace the existing JavaScript section in your profile.ejs

// Toggle sidebar on mobile
function toggleSidebar() {
    const sidebar = document.getElementById('sidebar');
    const overlay = document.getElementById('sidebarOverlay');
    sidebar.classList.toggle('show');
    overlay.classList.toggle('show');
}

// Confirm delete account
function confirmDeleteAccount() {
    new bootstrap.Modal(document.getElementById('deleteAccountModal')).show();
}

// Enable delete button only when correct text is entered
document.getElementById('deleteConfirmInput').addEventListener('input', function(e) {
    const confirmBtn = document.getElementById('confirmDeleteBtn');
    if (e.target.value === 'DELETE') {
        confirmBtn.disabled = false;
        confirmBtn.classList.remove('btn-secondary');
        confirmBtn.classList.add('btn-danger');
    } else {
        confirmBtn.disabled = true;
        confirmBtn.classList.remove('btn-danger');
        confirmBtn.classList.add('btn-secondary');
    }
});

// Enhanced password validation
const newPasswordField = document.getElementById('newPassword');
const confirmPasswordField = document.getElementById('confirmNewPassword');

function validatePasswords() {
    const newPassword = newPasswordField.value;
    const confirmPassword = confirmPasswordField.value;
    
    // Clear previous custom validity
    confirmPasswordField.setCustomValidity('');
    
    if (confirmPassword) {
        if (newPassword !== confirmPassword) {
            confirmPasswordField.setCustomValidity('Passwords do not match');
            confirmPasswordField.classList.add('is-invalid');
            confirmPasswordField.classList.remove('is-valid');
        } else {
            confirmPasswordField.setCustomValidity('');
            confirmPasswordField.classList.add('is-valid');
            confirmPasswordField.classList.remove('is-invalid');
        }
    }
    
    // Check password strength
    if (newPassword) {
        if (newPassword.length < 6) {
            newPasswordField.setCustomValidity('Password must be at least 6 characters long');
            newPasswordField.classList.add('is-invalid');
            newPasswordField.classList.remove('is-valid');
        } else {
            newPasswordField.setCustomValidity('');
            newPasswordField.classList.add('is-valid');
            newPasswordField.classList.remove('is-invalid');
        }
    }
}

// Add event listeners for password validation
newPasswordField.addEventListener('input', validatePasswords);
confirmPasswordField.addEventListener('input', validatePasswords);

// Email validation for profile update
const emailField = document.getElementById('email');
emailField.addEventListener('input', function() {
    const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (this.value && !emailPattern.test(this.value)) {
        this.setCustomValidity('Please enter a valid email address');
        this.classList.add('is-invalid');
        this.classList.remove('is-valid');
    } else {
        this.setCustomValidity('');
        this.classList.add('is-valid');
        this.classList.remove('is-invalid');
    }
});

// Add loading states to forms with better UX
document.querySelectorAll('form').forEach(form => {
    form.addEventListener('submit', function(e) {
        const submitBtn = form.querySelector('button[type="submit"]');
        if (submitBtn && !submitBtn.disabled) {
            const originalText = submitBtn.innerHTML;
            const isPasswordForm = form.querySelector('#currentPassword');
            const isProfileForm = form.querySelector('#email');
            
            let loadingText = '<i class="fas fa-spinner fa-spin me-2"></i>Processing...';
            if (isPasswordForm) {
                loadingText = '<i class="fas fa-spinner fa-spin me-2"></i>Changing Password...';
            } else if (isProfileForm) {
                loadingText = '<i class="fas fa-spinner fa-spin me-2"></i>Updating Profile...';
            }
            
            submitBtn.innerHTML = loadingText;
            submitBtn.disabled = true;
            form.classList.add('loading');
            
            // Re-enable after 10 seconds as fallback
            setTimeout(() => {
                submitBtn.innerHTML = originalText;
                submitBtn.disabled = false;
                form.classList.remove('loading');
            }, 10000);
        }
    });
});

// Auto-hide alerts after 5 seconds
document.querySelectorAll('.alert').forEach(alert => {
    if (alert.classList.contains('alert-success')) {
        setTimeout(() => {
            alert.style.transition = 'opacity 0.5s ease';
            alert.style.opacity = '0';
            setTimeout(() => {
                alert.remove();
            }, 500);
        }, 5000);
    }
});

// Close sidebar when clicking outside on mobile
document.addEventListener('click', function(event) {
    const sidebar = document.getElementById('sidebar');
    const toggleBtn = document.querySelector('.btn-toggle-sidebar');
    const overlay = document.getElementById('sidebarOverlay');
    
    if (window.innerWidth <= 768 && sidebar.classList.contains('show')) {
        if (!sidebar.contains(event.target) && !toggleBtn.contains(event.target)) {
            sidebar.classList.remove('show');
            overlay.classList.remove('show');
        }
    }
});
// Handle window resize
window.addEventListener('resize', function() {
    const sidebar = document.getElementById('sidebar');
    const overlay = document.getElementById('sidebarOverlay');
    
    if (window.innerWidth > 768) {
        sidebar.classList.remove('show');
        overlay.classList.remove('show');
    }
});

// Add visual feedback for form validation
document.querySelectorAll('.form-control').forEach(field => {
    field.addEventListener('blur', function() {
        if (this.value.trim() !== '') {
            if (this.checkValidity()) {
                this.classList.add('is-valid');
                this.classList.remove('is-invalid');
            } else {
                this.classList.add('is-invalid');
                this.classList.remove('is-valid');
            }
        }
    });
    
    field.addEventListener('focus', function() {
        this.classList.remove('is-invalid', 'is-valid');
    });
});
    </script>
</body>
</html>